name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Where to deploy
        options: 
        - dev
        - preprod
        - prod
  
concurrency: production

permissions:
  contents: read

jobs:
  deploy:
    environment: ${{ github.event.inputs.environment }}
    name: Run Deployment
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: us-east-2
          role-duration-seconds: 3600
          role-session-name: GithubActions-Session

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
 
      - name: Terraform Init
        run: terraform init -backend-config="bucket=eks-blueprints-multi-env-demo-repo-${{ github.event.inputs.environment }}" -backend-config="region=us-east-2" -backend-config="key=${{ github.event.inputs.environment }}"

      - name: Terraform Format
        run: terraform fmt -check
      
      - name: Terraform Plan
        run: terraform plan -var="datadog_api_key=${{ secrets.DATADOG_API_KEY }}" -var="eks_cluster_domain=${{ github.event.inputs.environment }}.kuapoorv.people.aws.dev" -var="acm_certificate_domain=*.${{ github.event.inputs.environment }}.kuapoorv.people.aws.dev"

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -var="datadog_api_key=${{ secrets.DATADOG_API_KEY }}" -var="eks_cluster_domain=${{ github.event.inputs.environment }}.kuapoorv.people.aws.dev" -var="acm_certificate_domain=*.${{ github.event.inputs.environment }}.kuapoorv.people.aws.dev"
